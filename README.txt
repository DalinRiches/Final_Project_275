\documentclass[12 pt]{article}
\usepackage[letterpaper, margin=1in]{geometry}
\usepackage{multirow}
\usepackage{graphicx}
\usepackage{mathtools}
\usepackage{float}
\begin{document}
\title{CMPUT 275 Final Project: Digital Synthesizer}
\maketitle
\begin{center}
Made by: Dalin Riches and John Dorn
\end{center}

\pagebreak
\section{Overview}
\paragraph{}
This project is a two-oscillator digital synthesizer. The synth has a GUI that can be accessed by running 
the following command within the client directory.


\begin{verbatim} 
python3 seq_interface.py 
\end{verbatim}


This command will the launch the GUI program and allow one to use the Synth in a simple graphical setting. 
The Synth is a package and can be used without the GUI in other python  programs. The Synth supports audio
 playback from speakers if the package alsaaudio is installed on the device. Because of playback's dependency 
on this package, playback is only supported on Linux machines. However, not having alsaaudio installed does
 not break usability of the Synth as recording output to a .wav is supported.


\section{Installing alsaaudio}
\paragraph{}


Alsaaudio's web page can be found here:


\begin{verbatim} 
https://larsimmisch.github.io/pyalsaaudio/
\end{verbatim}


As well, the download for the package it's self can be found here:


\begin{verbatim} 
https://pypi.python.org/pypi/pyalsaaudio
\end{verbatim}


Finally the instructions for installing here:


\begin{verbatim} 
https://larsimmisch.github.io/pyalsaaudio/pyalsaaudio.html#installation
\end{verbatim}

Installation requires downloading the package, extracting, navigating to the folder's directory, and then 
following the instructions they detail on the site.

\section{Synth}
\paragraph{}
The Synth has two wave-table oscillator's that generate the audio stream. We choose wave-table oscillator's
 as it allows one to generate an arbitrary waveforms. This adds a bunch of functionality to the Synth by not
 limiting the user to a few select wave forms.
\subsection{Wavetables}
\paragraph{}
Wave-tables included in this program were all either generated by us using a classical oscillator or created
 within Xfer's Serum using the wave table editor, no wave-tables included were created by a third-party. 
Information on serum and how the wave-table editor works is here:
\begin{verbatim} 
https://www.xferrecords.com/products/serum
\end{verbatim}


A wave-table is a three dimensional array of data. The "x-axis" is the sample number; the "y-axis" the amplitude; 
and the "z-axis" the wave-table position. This allows you to modify the sound by automating the wave-table 
position (Modulation will be covered latter) or just select the perfect waveform from some .wav file.
The wave-tables we use are merely a .wav file that we load each complete chunk of 2048 samples. These chunks are 
known as frames and correspond to the wave-table position (frame 0 = wave-table position 0). Because this loads 
each complete block of 2024 .wav files specifically meant to be a wave-table is not necessary, they can be 
any .wav file as long as it contains at least 2024 samples.

\subsection{Oscillator's}
The oscillator's are what produce the initial audio stream.  Selecting the wave-table will be covered in the GUI section. 
The oscilator's have the following control's:
\begin{enumerate}
\item Detune
\item Volume
\item Wave-table Postion
\item Phase Offset
\end{enumerate}
\textbf{Detune}: Allows you to offset the frequency of the Oscillator from the root note(the note being provided 
by the sequencer) by $\pm24$ semitones, 12 semitones is an octave.\\
\\
\textbf{Volume}: Allows you to change the volume.\\
\\
\textbf{Wave-table Position}: Allows you to change the wave-table position.\\
\\
\textbf{Phase Offset}: Allows you to choose the initial phase, aka the starting position of the waveform.

\subsection{Envelopes}
Envelopes shape the sound with amplification modulation. The type of envelopes we are using are called ADSR 
envelope's, which stands for Attack Decay Sustain Release. 
The envelope's have the following control's:
\begin{enumerate}
\item Attack
\item Decay
\item Sustain
\item Release
\end{enumerate}
\textbf{Attack}: Determines the amount of time the input signal will take to rise from 0 to 100\% amplification
 in seconds. \\
\\
\textbf{Decay}: Determines the amount of time the input signal will take to fall from 100 to (sustain amplification)\%
 amplification in seconds.\\
\\
\textbf{Sustain}: Determines the amplification of the sustain. Sustain time automatically scales to fill 
any remaining time ADR do not cover.\\
\\
\textbf{Release}: Determines the amount of time the input signal will take to fall from (sustain amplification)
 to 0\% amplification, in seconds.

\subsection{Filter's}
\paragraph{}
The filter's will filter out certain frequency's depending on type of filter selected. There are two type's of
 filter within this project, High-Pass and Low-Pass. Both these filter's are first-order RC filter's meaning they
 attenuate frequency above(Low-Pass) and below(High-Pass) the cut-off frequency with a slope of $-20Db/dec$ in the
 magnitude-frequency Bode-Plot. Selecting the filter type will be covered in the GUI section.  
The filter's have the following control's:
\begin{enumerate}
\item Cut-off
\end{enumerate}
\textbf{Cut-off}: Allows you to change the cut-off frequency.

\subsection{LFO's}
\paragraph{}
The LFO or low frequency oscillator generates a value from -1 to 1 using classical oscillator's. It has three
 wave-forms: $sin$, $square$, $saw$. These are using to oscillate (modulate) parameter's,  based on the output
 of the LFO, of anything control on a device within the Synth including it's self, however that would be pointless.
Selecting the device and control will be covered in the GUI section.
The LFO's have the following control's:
\begin{enumerate}
\item speed
\item Amount
\item Offset
\item Wavetype
\end{enumerate}
\textbf{Speed}: Determines the frequency the LFO operates at.\\
\\
\textbf{Amount}: Determines the amount of output that is passed into the control.\\
\\
\textbf{Offset}: Offset's the output of the LFO by this amount.\\
\\
\textbf{Wavetype}: Determines which waveform the LFO uses.\\

\subsection{Voicing}
This Synth is capable of producing multiple voices, however they are not implement yet as multiple voice mixing
 is not ready yet. Voicing is used for generating a note of the sequence. Meaning once multi voice mixing is 
implemented the Synth will be polyphonic instead of monophonic.

\subsection{Structure of Synth}
The Synth contains two Oscillator's generating in parrell, each of which feed into an envelope. These two audio 
streams are then mixed and passed through the filter's in series allowing you to create a bandpass filter by 
combining low and high pass filter's. The Synth contains three LFO's that run independently and modify their 
parameter at the beginning of every sample generation.
The overall structure of the Synth is as follows:
\begin{enumerate}
\item Update LFO's
\item Oscilator's
\item Envelope's
\item Mix audio streams
\item Filter1 
\item Filter2
\item Output
\end{enumerate}

\section{GUI}
\paragraph{}
The GUI contains widget's for all the Synth's devices all of which have the ability to be disabled and contain 
the respective controls outlined in the Synth section as dials. Oscillator's have a button that opens a 
menu containing all the file's found within the wavetables directory, selecting these will load the wave-table 
into the oscillator. Filter's have a button that switches between the type of filter. LFO's have three button's 
the first selects the device to modulate with a pop-up menu. The second chooses the control with a pop-up menu. 
Not selecting a control will not link the LFO. The third toggles retrigger, meaning the LFO will reset to phase = 0 
when a note starts. Otherwise it oscillates continuously.

\subsection{Step Sequencer}
\paragraph{}
The GUI contains a step sequencer that is used to generate output within the GUI. Lowest note on the sequencer
 is INSERT and the highest is  INSERT, however the oscillator's are able to generate notes from A0 to A10.

\subsection{Using the Sequencer}
\paragraph{}
The y-axis of the plot corresponds to the note and the x-axis corresponds to time. Step time is controlled by
 the "Speed" dial to the right of the sequencer, who's value corresponds to seconds. 
\subsubsection{Placing Notes}
\paragraph{}
Notes can be placed and removed by clicking the mouse 1 button on the desired step. Creating note's that space
 multiple steps can be created by clicking the mouse 1 button on the initial step and while holding the mouse 1
 button and moving along the track to the right. Removing them is done in the same manner just selecting the last
 step and moving to the left. Notes spanning more than one step can be divided by selecting the step you want 
the split to occur.
\subsection{Output}
\paragraph{}
To generate output click the render button to the right of the sequencer. The output will render whichever output
 types you have enabled.
\subsubsection{Output Types}
\paragraph{}
There are two types of output: Playback and Record. Both of which can be enabled/disabled using the respective 
button's to the right of the sequencer, light grey indicates enabled.
Playback will output the sound to the speakers and record will output the sound to a .wav file called output.wav 
within the client directory. If this already exists the file will be replaced.













\end{document}